Networking Tricks
=================
Steven K. Baum
v0.2, 2020-10-28
:doctype: book
:toc:
:icons:

:numbered!:



Zerotier
--------

Overview
~~~~~~~~

https://www.zerotier.com/[`https://www.zerotier.com/`]

https://github.com/zerotier/ZeroTierOne[`https://github.com/zerotier/ZeroTierOne`]

=====
ZeroTier is a smart programmable Ethernet switch for planet Earth. It allows all networked devices, VMs, containers, and applications to communicate as if they all reside in the same physical data center or cloud region.

This is accomplished by combining a cryptographically addressed and secure peer to peer network (termed VL1) with an Ethernet emulation layer somewhat similar to VXLAN (termed VL2). Our VL2 Ethernet virtualization layer includes advanced enterprise SDN features like fine grained access control rules for network micro-segmentation and security monitoring.

All ZeroTier traffic is encrypted end-to-end using secret keys that only you control. Most traffic flows peer to peer, though we offer free (but slow) relaying for users who cannot establish peer to peer connections.
...
Everything in the ZeroTier world is controlled by two types of identifier: 40-bit/10-digit ZeroTier addresses and 64-bit/16-digit network IDs. These identifiers are easily distinguished by their length. A ZeroTier address identifies a node or "device" (laptop, phone, server, VM, app, etc.) while a network ID identifies a virtual Ethernet network that can be joined by devices.

ZeroTier addresses can be thought of as port numbers on an enormous planet-wide enterprise Ethernet smart switch supporting VLANs. Network IDs are VLAN IDs to which these ports may be assigned. A single port can be assigned to more than one VLAN.

A ZeroTier address looks like 8056c2e21c and a network ID looks like 8056c2e21c000001. Network IDs are composed of the ZeroTier address of that network's primary controller and an arbitrary 24-bit ID that identifies the network on this controller. Network controllers are roughly analogous to SDN controllers in SDN protocols like OpenFlow, though as with the analogy between VXLAN and VL2 this should not be read to imply that the protocols or design are the same. You can use our convenient and inexpensive SaaS hosted controllers at my.zerotier.com or run your own controller if you don't mind messing around with JSON configuration files or writing scripts to do so.
=====

https://zerotier.atlassian.net/wiki/spaces/SD/pages/8454145/Getting+Started+with+ZeroTier[`https://zerotier.atlassian.net/wiki/spaces/SD/pages/8454145/Getting+Started+with+ZeroTier`]

https://www.youtube.com/watch?v=XrLk21Xy2i0[`https://www.youtube.com/watch?v=XrLk21Xy2i0`]

https://www.youtube.com/watch?v=Bl_Vau8wtgc[`https://www.youtube.com/watch?v=Bl_Vau8wtgc`]

https://www.youtube.com/watch?v=lFmeF5xoAPI[`https://www.youtube.com/watch?v=lFmeF5xoAPI`]

https://en.wikipedia.org/wiki/ZeroTier[`https://en.wikipedia.org/wiki/ZeroTier`]
=====
ZeroTier provides a suite of open-source tools licensed under BSL intended to support development and deployment of virtual data centers:

The main product line consists of these following tools:

* *ZeroTier One*, first released in 2014[7], a portable client application that provides connectivity to public or private virtual networks.
* *Central*, a web-based UI portal for managing virtual networks.
* *libzt* (SDK), a linkable library that provides the functionality of ZeroTier One but that can be embedded in applications or services.
* *LF* (pronounced "aleph"), a fully decentralized fully replicated key/value store.

ZeroTier One client is used to connect to virtual networks previously created in ZeroTier Central web-based UI. Endpoint connections are peer-to-peer and end-to-end encrypted. STUN and hole punching are used to establish direct connections between peers behind NAT. Direct connection route discovery is made with the help of a global network of root servers via a mechanism similar to ICE in WebRTC.

Virtual networks are managed via API or centralized proprietary web-based UI (ZeroTier Central), although open-source web-based and CLI alternatives exist. By default, root servers hosted by ZeroTier Inc. are used, but being open-source, can be also self-hosted. 
=====

Quick Start
~~~~~~~~~~~

First, set up a free account at https://zerotier.com.

Then, create a network using the interface at https://my.zerotier.com/.

A network ID will be created for your network, e.g. *a5da8454b2xe4h73*.

Download the client.  There are binaries available for various platforms, but for Linux
it's best to download the source code and compile it as follows.

-----
git clone https://github.com/zerotier/ZeroTierOne.git
cd ZeroTierOne
make
su
make install
-----

This will install the following programs

-----
/usr/sbin/zerotier-one
/usr/sbin/zerotier-idtool
/usr/sbin/zerotier-cli
-----

although the latter two are just symbolic links to the first one.  After the client
has been installed you first need to start the service via:

-----
su
zerotier-one -d
-----

after which you can join the network you created via the network ID that
was created for you.

-----
su
zerotier-cli join a5da8454b2xe4h73
-----

You can leave this network via:

-----
zerotier-cli leave a5da8454b2xe4h73
-----

Now you can find you IP number within your Zerotier network via:

-----
su
zerotier-cli listnetworks
200 listnetworks a5da8454b2xe4h73 gully_foyle_lives 72:c5:1a:2c:e3:16 OK PUBLIC ztwfulugob 10.147.17.201/24
-----

wherein `10.147.17.201` is the IP number that will be used to access this machine from other
machines on your Zerotier network.  
Also, this shows that `ztwfulugob` is the name of the ethernet interface created for the Zerotier network on
this machine.

Install the client on another machine to get another IP
number and you can `ssh` between the two machines using those numbers.  Any networking actions
that can be performed on your regular network can be performed on your Zerotier network.

Using Zerotier as a VPN
~~~~~~~~~~~~~~~~~~~~~~~

This is explained in greater detail at:

https://www.digitalocean.com/community/tutorials/getting-started-software-defined-networking-creating-vpn-zerotier-one[`https://www.digitalocean.com/community/tutorials/getting-started-software-defined-networking-creating-vpn-zerotier-one`]

Enable IP Forwarding
^^^^^^^^^^^^^^^^^^^^

Now we need to enable IP forwarding to enable the VPN traffic from your client in the ZeroTier network
to arrive on the ZeroTier interface of the server.  Find the current setting for IP forwarding via:

-----
su
sysctl net.ipv4.ip_forward

net.ipv4.ip_forward = 0
-----

If this result is `0`, then you need to edit the `sysctl.conf` file:

-----
vi /etc/sysctl.conf
-----

and include or change the following line to:

-----
net.ipv4.ip_forward = 1
-----

after which you run:

-----
sysctl -p
-----

to trigger the kernel to adopt the change.
If the result is `1`, then you don't have to edit the file.

Configuring Routing Rules
^^^^^^^^^^^^^^^^^^^^^^^^^

You first need to find out the names that have been assigned to both the ZeroTier and
the regular Internet ethernet interfaces.
You can obtain a list of all ethernet interfaces via:

-----
ip link show

...
2: enp5s0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP mode DEFAULT group default qlen 1000
    link/ether 00:30:48:dd:5e:56 brd ff:ff:ff:ff:ff:ff
...
14: ztwfulugob: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 2800 qdisc fq_codel state UNKNOWN mode DEFAULT group default qlen 1000
    link/ether 72:c2:6f:90:74:e6 brd ff:ff:ff:ff:ff:ff
-----

This tells us that the regular ethernet interface is called `enp5s0` and that the
ZeroTier interface is called `ztwfulugob`.
We use this information to use `iptables` to enable NAT and IP masquerading:

-----
su
iptables -t nat -A POSTROUTING -o enp5s0 -j MASQUERADE
-----

and to permit traffic forwarding and track active connections:

-----
iptables -A FORWARD -m conntrack -ctstate RELATED,ESTABLISHED -j ACCEPT
-----

Now we allow traffic forwarding from `ztwfulugob` to `enp5s0`:

-----
su
iptables -A FORWARD  -i ztwfulugob -o enp5s0 -j ACCEPT
-----

Save the `iptables` configuration.

-----
cp /etc/sysconfig/iptables /etc/syscon
sufig/iptables-2020-10-29
iptables-save >/etc/sysconfig/iptables
-----

Setting a Global Route in ZeroTier
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Add a new route on the ZeroTier Networks page.
Add `0.0.0.0/0` in the *network/bits* field, and the ZeroTier IP number in the *LAN* field.


Configuring the Client
^^^^^^^^^^^^^^^^^^^^^^

Add the following line to the `/etc/sysctl.conf` file:

-----
net.ipv4.conf.all.rp_filter=2
-----

and then run:

-----
su
sysctl -p
-----

to adopt the change in the kernel.

Now tell the client software that your network is allowed to carry default route traffic via:

-----
su
zerotier-cli set [network ID] allowDefault=1
-----

This can be reversed via:

-----
zerotier-cli set [network ID] allowDefault=0
-----


